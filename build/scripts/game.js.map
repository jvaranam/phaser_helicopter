{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "D:/xampp/htdocs/l/phaser/poc1/src/index.js",
    "D:/xampp/htdocs/l/phaser/poc1/src/objects/HelicopterObj.js",
    "D:/xampp/htdocs/l/phaser/poc1/src/objects/MovingWalls.js",
    "D:/xampp/htdocs/l/phaser/poc1/src/states/Boot.js",
    "D:/xampp/htdocs/l/phaser/poc1/src/states/GameOver.js",
    "D:/xampp/htdocs/l/phaser/poc1/src/states/GameTitle.js",
    "D:/xampp/htdocs/l/phaser/poc1/src/states/Main.js",
    "D:/xampp/htdocs/l/phaser/poc1/src/states/Preload.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import Boot from 'states/Boot';\nimport Preload from 'states/Preload';\nimport GameTitle from 'states/GameTitle';\nimport Main from 'states/Main';\nimport GameOver from 'states/GameOver';\n\nclass Game extends Phaser.Game {\n\n    constructor() {\n\n        super(window.innerWidth * window.devicePixelRatio, window.innerHeight * window.devicePixelRatio, Phaser.AUTO);\n\n        this.state.add('Boot', Boot, false);\n        this.state.add('Preload', Preload, false);\n        this.state.add('GameTitle', GameTitle, false);\n        this.state.add('Main', Main, false);\n        this.state.add('GameOver', GameOver, false);\n\n        this.state.start('Boot');\n    }\n\n}\n\nnew Game();\n",
    "class HelicopterObj {\n\n    constructor(game) {\n        this.game = game;\n        this.isRising = false;\n        this.sprite = null;\n    }\n\n    spawn() {\n\n        let helicopterSprite = new Phaser.Graphics(this.game).beginFill(Phaser.Color.hexToRGB('#2c3e50'), 1).drawRect(0, 0, 100, 100);\n\n        let helicopterSpriteTexture = helicopterSprite.generateTexture();\n\n        this.sprite = this.game.add.sprite(this.game.world.centerX, this.game.world.centerY, helicopterSpriteTexture);\n        this.game.physics.arcade.enable(this.sprite);\n        this.sprite.enableBody = true;\n\n        this.sprite.body.gravity.y = 5000;\n        this.sprite.body.velocity.y = -1500;\n        this.sprite.body.collideWorldBounds = false;\n\n        this.sprite.anchor.setTo(0.5, 0.5);\n\n    }\n    setRising() {\n        this.isRising = true;\n    }\n\n    setFalling() {\n        this.isRising = false;\n    }\n\n    increaseVerticalVelocity() {\n        this.sprite.body.velocity.y -= 200;\n    }\n\n    isOutOfBounds() {\n\n        let position = this.sprite.body.position.y;\n\n        return position > this.game.world.height || position < 0;\n\n    }\n\n}\n\nexport default HelicopterObj\n;\n",
    "class MovingWalls {\n\n    constructor(game) {\n\n        this.game = game;\n        this.wallGroup = null;\n        this.spriteGroup = null;\n        this.wallSpeed = 300;\n\n        let seed = Date.now();\n        this.random = new Phaser.RandomDataGenerator([seed]);\n\n        this.initWalls();\n\n    }\n\n    initWalls() {\n\n        this.wallHeight = this.random.integerInRange(20, this.game.world.height / 3);\n        this.wallWidth = 200;\n\n        let wallSprite = new Phaser.Graphics(this.game)\n            .beginFill(Phaser.Color.hexToRGB('#e74c3c'), 1)\n            .drawRect(0, 0, this.wallWidth, this.wallHeight);\n\n        let wallSpriteTexture = wallSprite.generateTexture();\n\n        this.spriteGroup = this.game.add.group();\n        this.spriteGroup.enableBody = true;\n        this.spriteGroup.createMultiple(10, wallSpriteTexture);\n\n    }\n\n    spawn() {\n\n        let wall = this.spriteGroup.getFirstDead();\n\n        wall.body.gravity.y = 0;\n\n        wall.reset(this.game.world.width, this.random.integerInRange(0, this.game.world.height));\n\n        wall.body.velocity.x = -this.wallSpeed;\n        wall.body.immovable = true;\n\n        //When the block leaves the screen, kill it\n        wall.checkWorldBounds = true;\n        wall.outOfBoundsKill = true;\n\n\n    }\n\n}\n\nexport default MovingWalls;\n",
    "class Boot extends Phaser.State {\n\n    preload() {\n\n    }\n\n    create() {\n        this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n        this.game.state.start(\"Preload\");\n    }\n\n}\n\nexport default Boot;\n",
    "class GameOver extends Phaser.State {\n\n    create() {\n\n    }\n\n    restartGame() {\n        this.game.state.start(\"Main\");\n    }\n\n}\n\nexport default GameOver;\n",
    "class GameTitle extends Phaser.State {\n\n    create() {\n\n    }\n\n    startGame() {\n        this.game.state.start(\"Main\");\n    }\n\n}\n\nexport default GameTitle;\n",
    "import HelicopterObj from 'objects/HelicopterObj';\nimport MovingWalls from 'objects/MovingWalls';\n\n\n\nclass Main extends Phaser.State {\n\n    create() {\n\n        //Enable Arcade Physics\n        this.game.physics.startSystem(Phaser.Physics.ARCADE);\n\n        //Set the games background colour\n        this.game.stage.backgroundColor = '#cecece';\n\n        this.helicopter = new HelicopterObj(this.game);\n        this.helicopter.spawn();\n\n\n        this.walls = new MovingWalls(this.game);\n\n        this.addControls();\n        this.addTimers();\n    }\n\n    update() {\n\n        this.game.physics.arcade.overlap(this.helicopter.sprite, this.walls.spriteGroup, this.gameOver, null, this);\n\n        // Check if out of bounds\n        if (this.helicopter.isOutOfBounds()) {\n            this.gameOver();\n        }\n\n        // Check if  helicopter is rising\n        if (this.helicopter.isRising) {\n            this.helicopter.increaseVerticalVelocity();\n        }\n\n    }\n\n    addControls() {\n        this.game.input.onDown.add(this.helicopter.setRising, this.helicopter);\n        this.game.input.onUp.add(this.helicopter.setFalling, this.helicopter);\n    }\n\n    addTimers() {\n        this.game.time.events.loop(2000, this.walls.spawn, this.walls);\n    }\n\n    gameOver() {\n        this.game.state.restart();\n    }\n\n\n}\n\nexport default Main;\n\n\n//https://www.youtube.com/watch?v=Z3T3hNHq3ig  https://www.youtube.com/watch?v=xqAPokFsQac  https://www.youtube.com/watch?v=-VugMh3ES-g\n",
    "class Preload extends Phaser.State {\n\n    preload() {\n        /* Preload required assets */\n        //this.game.load.image('myImage', 'assets/my-image.png');\n        //this.game.load.audio('myAudio', 'assets/my-audio.wav');\n        //this.game.load.atlas('myAtlas', 'assets/my-atlas.png', 'assets/my-atlas.json');\n    }\n\n    create() {\n        //NOTE: Change to GameTitle if required\n        this.game.state.start(\"Main\");\n    }\n\n}\n\nexport default Preload;\n"
  ]
}